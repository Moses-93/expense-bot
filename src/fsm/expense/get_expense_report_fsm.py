from aiogram.fsm.context import FSMContext
from src.states.expenses import GetExpensesReportStates
from src.services.expense.expense_service import ExpenseReportService
from src.services.expense.validators import ExpenseValidator


MESSAGES = {
    "start": "üìä –ì–µ–Ω–µ—Ä—É—î–º–æ –∑–≤—ñ—Ç! –í–≤–µ–¥–∏ **–ø–æ—á–∞—Ç–∫–æ–≤—É –¥–∞—Ç—É** —É —Ñ–æ—Ä–º–∞—Ç—ñ –†–†–†–†-–ú–ú-–î–î. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 2024-01-01",
    "set_end_date": "‚û°Ô∏è –¢–µ–ø–µ—Ä –≤–∫–∞–∂–∏ **–∫—ñ–Ω—Ü–µ–≤—É –¥–∞—Ç—É**. –¢–∞–∫ —Å–∞–º–æ ‚Äî –†–†–†–†-–ú–ú-–î–î. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 2024-12-31",
    "invalid_date": "‚ùå –£–ø—Å, —â–æ—Å—å –Ω–µ —Ç–∞–∫ –∑ –¥–∞—Ç–æ—é! –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ —É —Ñ–æ—Ä–º–∞—Ç—ñ **–†–†–†–†-–ú–ú-–î–î**. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 2024-05-20",
    "success_update": "‚úÖ –í—ñ—Ç–∞—é! –ó–≤—ñ—Ç —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ. –¢–µ–ø–µ—Ä —Ç—É—Ç –≤—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ! üòä",
}


class GetReportFSMService:
    def __init__(
        self, validator: ExpenseValidator, expense_report_service: ExpenseReportService
    ):
        self.validator = validator
        self.expense_report_service = expense_report_service

    async def start(self, state: FSMContext):
        await state.set_state(GetExpensesReportStates.START_DATE)
        return MESSAGES["start"]

    async def set_start_date(self, start_date: str, state: FSMContext):
        if not self.validator.is_valid_date(start_date):
            await state.clear()
            return MESSAGES["invalid_date"]
        await state.update_data(start_date=start_date)
        await state.set_state(GetExpensesReportStates.END_DATE)
        return MESSAGES["set_end_date"]

    async def set_end_date(self, user_id: int, end_date: str, state: FSMContext):
        if not self.validator.is_valid_date(end_date):
            await state.clear()
            return MESSAGES["invalid_date"]
        data = await state.get_data()
        return await self.expense_report_service.get_expenses_report(
            user_id, data["start_date"], data["end_date"]
        )
